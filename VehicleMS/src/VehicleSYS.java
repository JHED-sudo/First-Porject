
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author JHED
 */
public class VehicleSYS extends javax.swing.JFrame {

    /**
     * Creates new form VehicleSYS
     */
    public VehicleSYS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Srbtn = new javax.swing.JButton();
        Clbtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        Svbtn = new javax.swing.JButton();
        Upbtn = new javax.swing.JButton();
        Debtn = new javax.swing.JButton();
        Dibtn = new javax.swing.JButton();
        Deabtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        getBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jPanel4.setBackground(new java.awt.Color(245, 245, 220));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vehicle_Id", "Owner", "Category", "Type", "Make", "Model", "Year", "Color", "Plate_Num", "Reg.Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField3.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField5.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField6.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField8.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jTextField9.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Vehicle ID:");

        Srbtn.setBackground(new java.awt.Color(51, 255, 51));
        Srbtn.setFont(new java.awt.Font("Modern No. 20", 1, 24)); // NOI18N
        Srbtn.setText("Search");
        Srbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SrbtnActionPerformed(evt);
            }
        });

        Clbtn.setBackground(new java.awt.Color(51, 255, 51));
        Clbtn.setFont(new java.awt.Font("Modern No. 20", 1, 24)); // NOI18N
        Clbtn.setText("Clear");
        Clbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        jLabel2.setText("OPTIONS");

        Svbtn.setBackground(new java.awt.Color(51, 255, 51));
        Svbtn.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        Svbtn.setText("Save");
        Svbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SvbtnActionPerformed(evt);
            }
        });

        Upbtn.setBackground(new java.awt.Color(51, 255, 51));
        Upbtn.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        Upbtn.setText("Update");
        Upbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpbtnActionPerformed(evt);
            }
        });

        Debtn.setBackground(new java.awt.Color(255, 0, 0));
        Debtn.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        Debtn.setText("Delete");
        Debtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DebtnActionPerformed(evt);
            }
        });

        Dibtn.setBackground(new java.awt.Color(51, 255, 51));
        Dibtn.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        Dibtn.setText("Display All");
        Dibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DibtnActionPerformed(evt);
            }
        });

        Deabtn.setBackground(new java.awt.Color(255, 0, 0));
        Deabtn.setFont(new java.awt.Font("Modern No. 20", 0, 18)); // NOI18N
        Deabtn.setText("Delete All");
        Deabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeabtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Owner:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Category:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Type:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Make:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Model:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Year:");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Color:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Plate Num:");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Reg.Status:");

        jCheckBox1.setText("Active");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Inactive");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Pending");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        getBtn.setBackground(new java.awt.Color(51, 255, 51));
        getBtn.setFont(new java.awt.Font("Modern No. 20", 1, 24)); // NOI18N
        getBtn.setText("Get");
        getBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(Svbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Upbtn)
                        .addGap(51, 51, 51)
                        .addComponent(Debtn)
                        .addGap(48, 48, 48))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Dibtn)
                        .addGap(43, 43, 43)
                        .addComponent(Deabtn)
                        .addGap(82, 82, 82))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Srbtn)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(getBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Clbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox3))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(15, 15, 15)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1064, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(Srbtn)
                        .addGap(26, 26, 26)
                        .addComponent(Clbtn))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(getBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Svbtn)
                    .addComponent(Upbtn)
                    .addComponent(Debtn))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dibtn)
                    .addComponent(Deabtn))
                .addGap(37, 37, 37))
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\JHED\\Desktop\\java-practice\\VehicleMS\\src\\VEHICLE-MANAGEMENT-SYSTEM.png")); // NOI18N
        jLabel12.setText("jLabel12");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 106, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 215, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 106, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 1286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SrbtnActionPerformed
      Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) {  //if there is a connection execute the code below
    try {
        
        // Get the user input from jTextField1 text field
        String sc =jTextField1.getText();
        
        // Validate that Vehicle_ID are numeric
        if (!sc.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Error: Please enter valid number in Vehicle ID.");
            return;
        }
       
        // Use PreparedStatement to filter by Vehicle_ID safely
        String sql = "SELECT * FROM Vehicle WHERE Vehicle_ID = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, sc);
        
        ResultSet rs = stmt.executeQuery();
        
        // Clear the Table before displaying new results
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        // Check if the ResultSet contains any rows
        if (rs.next()) {
    do {
        // Retrieve each column's data from the ResultSet
        String Vehicle_ID = rs.getString("Vehicle_ID");
        String Owner = rs.getString("Owner");
        String Category = rs.getString("Category");
        String Type = rs.getString("Type");
        String Make = rs.getString("Make");
        String Model = rs.getString("Model");
        String Year = rs.getString("Year");
        String Color = rs.getString("Color");
        String Plate_Num = rs.getString("Plate_Num");
        String Registration_Status = rs.getString("Registration_Status");

        // Add each row to the table model
        model.addRow(new Object[] {Vehicle_ID, Owner, Category, Type, Make, Model, Year, Color, Plate_Num, Registration_Status});
    } while (rs.next());
} else {
            //Creating a panel to show No records
    JOptionPane.showMessageDialog(null, "No records found for the Vehicle ID: " + sc);
} 
        rs.close();
        stmt.close();
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}
    }//GEN-LAST:event_SrbtnActionPerformed

    private void ClbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClbtnActionPerformed
       //Setting the text to empty
        jTextField1.setText("");
        jTextField3.setText("");
        jTextField2.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
    }//GEN-LAST:event_ClbtnActionPerformed

    private void SvbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SvbtnActionPerformed
       Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) { //if there is a connection execute the code below
    try {
      
         // Check if any text field is empty
        StringBuilder emptyFields = new StringBuilder();
        
        if (jTextField1.getText().isEmpty()) {
            emptyFields.append("Vehicle ID, ");
        }
        if (jTextField2.getText().isEmpty()) {
            emptyFields.append("Owner, ");
        }
        if (jTextField3.getText().isEmpty()) {
            emptyFields.append("Category, ");
        }
        if (jTextField4.getText().isEmpty()) {
            emptyFields.append("Type, ");
        }
        if (jTextField5.getText().isEmpty()) {
            emptyFields.append("Make, ");
        }
        if (jTextField6.getText().isEmpty()) {
            emptyFields.append("Model, ");
        }
        if (jTextField7.getText().isEmpty()) {
            emptyFields.append("Year, ");
        }
        if (jTextField8.getText().isEmpty()) {
            emptyFields.append("Color, ");
        }
        if (jTextField9.getText().isEmpty()) {
            emptyFields.append("Plate Num, ");
        }
        
        // Check if any fields were left empty
        if (emptyFields.length() > 0) {
            // Remove the trailing comma and space
            emptyFields.setLength(emptyFields.length() - 2);
            JOptionPane.showMessageDialog(null, "Please fill the following fields: " + emptyFields.toString());
            return;
        }
        
        // Get the Vehicle ID and assigned to sc
        String sc = jTextField1.getText();
        
        // Validate that Vehicle_ID are numeric
        if (!sc.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Error: Please enter a valid numeric in Vehicle ID.");
            return;
        }
        
         // Determine the registration status based on the selected checkbox
        String registrationStatus = "";
        if (jCheckBox1.isSelected()) {
            registrationStatus = "Active";
        } else if (jCheckBox2.isSelected()) {
            registrationStatus = "Inactive";
        } else if (jCheckBox3.isSelected()) {
            registrationStatus = "Pending";
        }
           //The SQL quary to put data to Database
          String sql = "INSERT INTO Vehicle (Vehicle_ID, Owner, Category, Type, Make, Model, Year, Color, Plate_Num, Registration_Status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
          PreparedStatement stmt = conn.prepareStatement(sql);
            
          /*Set values for colimns 1-10 based on the text fields and registration status*/
          stmt.setString(1, jTextField1.getText());
          stmt.setString(2, jTextField2.getText());
          stmt.setString(3, jTextField3.getText());
          stmt.setString(4, jTextField4.getText());
          stmt.setString(5, jTextField5.getText());
          stmt.setString(6, jTextField6.getText());
          stmt.setString(7, jTextField7.getText());
          stmt.setString(8, jTextField8.getText());
          stmt.setString(9, jTextField9.getText());
          stmt.setString(10, registrationStatus);
          
          //Execute the update query and get the number of rows affected
            int rowsDeleted = stmt.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "A new records have been save successfully.");
            }

            // Clear the table model to reflect deletion
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            
            stmt.close();
        
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}

    }//GEN-LAST:event_SvbtnActionPerformed

    private void UpbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpbtnActionPerformed
        Connection conn = DBconnect.getConnection(); // Using the DBconnect to connect to the database

if (conn != null) { // If there is a connection, execute the code below
    try {
        // Check if any text field is empty
        StringBuilder emptyFields = new StringBuilder();
        
        if (jTextField1.getText().isEmpty()) {
            emptyFields.append("Vehicle ID, ");
        }
        if (jTextField2.getText().isEmpty()) {
            emptyFields.append("Owner, ");
        }
        if (jTextField3.getText().isEmpty()) {
            emptyFields.append("Category, ");
        }
        if (jTextField4.getText().isEmpty()) {
            emptyFields.append("Type, ");
        }
        if (jTextField5.getText().isEmpty()) {
            emptyFields.append("Make, ");
        }
        if (jTextField6.getText().isEmpty()) {
            emptyFields.append("Model, ");
        }
        if (jTextField7.getText().isEmpty()) {
            emptyFields.append("Year, ");
        }
        if (jTextField8.getText().isEmpty()) {
            emptyFields.append("Color, ");
        }
        if (jTextField9.getText().isEmpty()) {
            emptyFields.append("Plate Num, ");
        }
        
        // Check if any fields were left empty
        if (emptyFields.length() > 0) {
            // Remove the trailing comma and space
            emptyFields.setLength(emptyFields.length() - 2);
            JOptionPane.showMessageDialog(null, "Please fill the following fields: " + emptyFields.toString());
            return;
        }
        
       // Get the Vehicle ID and assigned to sc
        String sc = jTextField1.getText();
        
        // Validate that Vehicle_ID are numeric
        if (!sc.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Error: Please enter a valid numeric in Vehicle ID.");
            return;
        }
        
        // Determine the registration status based on the selected checkbox
        String registrationStatus = "";
        if (jCheckBox1.isSelected()) {
            registrationStatus = "Active";
        } else if (jCheckBox2.isSelected()) {
            registrationStatus = "Inactive";
        } else if (jCheckBox3.isSelected()) {
            registrationStatus = "Pending";
        }

        // The SQL query to insert data into the database
        String sql = "UPDATE Vehicle SET Owner = ?, Category = ?, Type = ?, Make = ?, Model = ?, Year = ?, Color = ?, Plate_Num = ?, Registration_Status = ? WHERE Vehicle_ID = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);

        // Set values for columns 1-10 based on the text fields and registration status
        stmt.setString(1, jTextField2.getText());
        stmt.setString(2, jTextField3.getText());
        stmt.setString(3, jTextField4.getText());
        stmt.setString(4, jTextField5.getText());
        stmt.setString(5, jTextField6.getText());
        stmt.setString(6, jTextField7.getText());
        stmt.setString(7, jTextField8.getText());
        stmt.setString(8, jTextField9.getText());
        stmt.setString(9, registrationStatus);
        stmt.setInt(10, Integer.parseInt(jTextField1.getText()));

        // Execute the update query and get the number of rows affected
        int rowsInserted = stmt.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "A new record has been saved successfully.");
        }

        // Clear the table model to reflect the new data
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        stmt.close();

    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}

    }//GEN-LAST:event_UpbtnActionPerformed

    private void DebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DebtnActionPerformed
     Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) {  //if there is a connection execute the code below
    try {
        
        // Get the Vehicle ID and assigned to sc
        String sc = jTextField1.getText();
        
        // Validate that Vehicle_ID are numeric
        if (!sc.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Error: Please enter a valid numeric in Vehicle ID.");
            return;
        }
        
        // Confirm the delete action
        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + sc + " records?",
                "Confirm Delete", JOptionPane.YES_NO_OPTION);
        
        if (confirmation == JOptionPane.YES_OPTION) {
            // Use a DELETE query to remove all rows
            String sql = "DELETE FROM Vehicle WHERE Vehicle_ID = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, sc);
            
            int rowsDeleted = stmt.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Record " + sc + " have been deleted successfully.");
            }

            // Clear the table model to reflect deletion
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            
            stmt.close();
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}
    }//GEN-LAST:event_DebtnActionPerformed

    private void DibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DibtnActionPerformed
 Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) {  //if there is a connection execute the code below
    try {
        // Use a simple query to retrieve all rows in the Vehicle table
        String sql = "SELECT * FROM Vehicle";
        PreparedStatement stmt = conn.prepareStatement(sql);

        ResultSet rs = stmt.executeQuery();

        // Clear the table before displaying new results
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // Populate the table with all rows from the ResultSet
        while (rs.next()) {
            String Vehicle_ID = rs.getString("Vehicle_ID");
            String Owner = rs.getString("Owner");
            String Category = rs.getString("Category");
            String Type = rs.getString("Type");
            String Make = rs.getString("Make");
            String Model = rs.getString("Model");
            String Year = rs.getString("Year");
            String Color = rs.getString("Color");
            String Plate_Num = rs.getString("Plate_Num");
            String Registration_Status = rs.getString("Registration_Status");

            // Add each row to the table model
            model.addRow(new Object[]{Vehicle_ID, Owner, Category, Type, Make, Model, Year, Color, Plate_Num, Registration_Status});
        }

        rs.close();
        stmt.close();
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}
    }//GEN-LAST:event_DibtnActionPerformed

    private void DeabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeabtnActionPerformed
       Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) {  //if there is a connection execute the code below
    try {
        // Confirm the delete action
        int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete all records?", "Confirm Delete", 
                JOptionPane.YES_NO_OPTION);
        
        if (confirmation == JOptionPane.YES_OPTION) {
            
            // Use a DELETE query to remove all rows
            String sql = "DELETE FROM Vehicle";
            PreparedStatement stmt = conn.prepareStatement(sql);
            
            int rowsDeleted = stmt.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "All records have been deleted successfully.");
            }

            // Clear the table model to reflect deletion
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            
            stmt.close();
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}

    }//GEN-LAST:event_DeabtnActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void getBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getBtnActionPerformed
        Connection conn = DBconnect.getConnection(); //Using the DBconnect to connect to database

if (conn != null) {  //if there is a connection execute the code below
    try {
        // Get the user input from jTextField1 text field
        String sc =jTextField1.getText();
        
        // Validate that Vehicle_ID are numeric
        if (!sc.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Error: Please enter values in Vehicle ID.");
            return;
        }
       
        // Use PreparedStatement to filter by Vehicle_ID safely
        String sql = "SELECT * FROM Vehicle WHERE Vehicle_ID = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, sc);
        
        ResultSet rs = stmt.executeQuery();
        
        // Check if the ResultSet contains any rows
        if (rs.next()) {
    do {
        // Retrieve each column's data from the ResultSet
        String Owner = rs.getString("Owner");
        String Category = rs.getString("Category");
        String Type = rs.getString("Type");
        String Make = rs.getString("Make");
        String Model = rs.getString("Model");
        String Year = rs.getString("Year");
        String Color = rs.getString("Color");
        String Plate_Num = rs.getString("Plate_Num");

        // Add each row to the TextField
       jTextField2.setText(Owner);
       jTextField3.setText(Category);
       jTextField4.setText(Type);
       jTextField5.setText(Make);
       jTextField6.setText(Model);
       jTextField7.setText(Year);
       jTextField8.setText(Color);
       jTextField9.setText(Plate_Num);
       
        
    } while (rs.next());
} else {
            //Creating a panel to show No records
    JOptionPane.showMessageDialog(null, "No records found for the Vehicle ID: " + sc);
} 
        rs.close();
        stmt.close();
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBconnect.closeConnection(conn);
    }
}
    }//GEN-LAST:event_getBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleSYS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleSYS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleSYS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleSYS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleSYS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Clbtn;
    public javax.swing.JButton Deabtn;
    public javax.swing.JButton Debtn;
    public javax.swing.JButton Dibtn;
    public javax.swing.JButton Srbtn;
    public javax.swing.JButton Svbtn;
    public javax.swing.JButton Upbtn;
    public javax.swing.JButton getBtn;
    public javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JCheckBox jCheckBox2;
    public javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
